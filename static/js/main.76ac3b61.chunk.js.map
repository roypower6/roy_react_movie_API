{"version":3,"sources":["Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","index","slice","App","state","isLoading","getMovies","a","axios","get","movies","data","setState","this","movie","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSA8BeA,MAzBf,YAAwD,EAAxCC,GAAyC,IAArCC,EAAoC,EAApCA,KAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OAChD,OAAO,sBAAKC,UAAU,QAAf,UACK,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACzC,sBAAKI,UAAU,cAAf,UACA,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,qBAAII,UAAU,cAAd,cAA8BL,KAC9B,oBAAIK,UAAU,gBAAd,SACKD,GAAUA,EAAOI,KAAI,SAACJ,EAAQK,GAAT,OACtB,oBAAgBJ,UAAU,gBAA1B,SAA2CD,GAAlCK,QAGb,oBAAGJ,UAAU,iBAAb,UAA+BH,EAAQQ,MAAM,EAAE,KAA/C,gBCqCOC,E,4MA3CbC,MAAM,CACJC,WAAW,G,EAGbC,U,sBAAW,8BAAAC,EAAA,sEAKCC,IAAMC,IAAI,yEALX,gBAGGC,EAHH,EAEPC,KACEA,KAAQD,OAGR,EAAKE,SAAS,CAAEF,SAAQL,WAAW,IAN9B,2C,kEASTQ,KAAKP,c,+BAEE,IAAD,EACqBO,KAAKT,MAAzBC,EADD,EACCA,UAAWK,EADZ,EACYA,OACpB,OACA,yBAASb,UAAU,YAAnB,SACGQ,EACD,qBAAKR,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGI,qBAAKA,UAAU,SAAf,SACGa,EAAOV,KAAI,SAAAc,GAAK,OACnB,cAAC,EAAD,CAEEvB,GAAIuB,EAAMvB,GACVC,KAAOsB,EAAMtB,KACbC,MAAQqB,EAAMrB,MACdC,QAAUoB,EAAMpB,QAChBC,OAASmB,EAAMC,mBACfnB,OAAUkB,EAAMlB,QANXkB,EAAMvB,e,GA7BLyB,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.76ac3b61.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport \"./Movie.css\";\nimport \"./App.css\";\n\nfunction Movie({id, year,title, summary, poster,genres}){\nreturn <div className=\"movie\">\n            <img src={poster} alt={title} title={title}/>\n        <div className=\"moive__data\">\n        <h3 className=\"movie__title\">{title}</h3>\n        <h5 className=\"movie__year\"> {year}</h5>\n        <ul className=\"movie__genres\">\n            {genres && genres.map((genres, index) =>(\n            <li key={index} className=\"genres__genre\">{genres}</li>\n            ))}\n            </ul>\n        <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\n        </div>\n    </div>;\n}\n\nMovie.propTypes={\n    id : PropTypes.number.isRequired,\n    year : PropTypes.number.isRequired,\n    title : PropTypes.string.isRequired,\n    summary : PropTypes.string.isRequired,\n    poster : PropTypes.string.isRequired,\n    genres : PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default Movie;","/* eslint-disable */\nimport React, { useState } from 'react';\nimport './App.css';\nimport './Movie.css';\nimport axios from 'axios';\nimport Movie from \"./Movie\";\n\n\nclass App extends React.Component{\n\n  state={\n    isLoading: true\n  }\n\n  getMovies= async() =>{\n    const {\n      data:{\n        data: { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\")\n        this.setState({ movies, isLoading: false});\n  }\n  componentDidMount(){\n    this.getMovies()\n  }\n  render(){\n    const {isLoading, movies}= this.state;\n  return (\n  <section className=\"container\">\n    {isLoading ? (\n    <div className=\"loader\">\n      <span className=\"loader__text\">Loading...</span>\n      </div>\n      ) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n          <Movie  \n            key={movie.id}\n            id={movie.id} \n            year ={movie.year}\n            title ={movie.title}\n            summary ={movie.summary}\n            poster ={movie.medium_cover_image}\n            genres = {movie.genres}\n          />\n          ))}\n          </div>\n      )}\n      </section>\n      );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}